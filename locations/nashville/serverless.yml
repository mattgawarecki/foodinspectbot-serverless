package:
  individually: true
  exclude:
    - __test__/**

plugins:
  - serverless-webpack

service:
  name: foodInspectBot-locations-nashville

custom:
  stage: ${opt:stage, 'dev'}
  productPrefix: foodInspectBot-${self:custom.stage}-locations-nashville
  imports:
    globalNewInspectionTopic:
      Fn::ImportValue: arnOf-globalNewInspectionTopic-${self:custom.stage}
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  profile: foodinspectbot
  region: us-west-2
  versionFunctions: false
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: onErrorTopic
        - ${self:custom.imports.globalNewInspectionTopic}
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::GetAtt: [configurationTable, Arn]
    # - Effect: Allow
    #   Action:
    #     - sqs:ReceiveMessage
    #   Resource:
    #     - Fn::GetAtt: [pendingTweetQueue, Arn]
  tags:
    Product: foodInspectBot

functions:
  scraper:
    name: ${self:service.name}-scraper
    description:
    handler: scraper/index.handler
    memorySize: 512
    timeout: 30
    environment:
      CONFIGURATION_TABLE_NAME:
        Ref: configurationTable
      NEW_INSPECTION_TOPIC_ARN: ${self:custom.imports.globalNewInspectionTopic}
    events:
      - schedule: rate(1 day)
  # tweeter:
  #   name: ${self:service.name}-tweeter
  #   description:
  #   handler: tweeter/handler.js
  #   timeout: 10
  #   environment:
  #     PENDING_QUEUE_URL:
  #       Ref: pendingTweetQueue
  #   events:
  #     - schedule:
  #         name: CentralTime-30m-morning
  #         description:
  #         rate: cron(0/30 4-6 * * * *)
  #     - schedule:
  #         name: CentralTime-30m-evening
  #         description:
  #         rate: cron(0/30 11-15 * * * *)

resources:
  Resources:
    configurationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productPrefix}_configuration
        AttributeDefinitions:
          - AttributeName: Key
            AttributeType: S
        KeySchema:
          - AttributeName: Key
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # pendingTweetQueue:
    #   Type: AWS::SQS::Queue
    #   Properties:
    #     FifoQueue: true
    #     QueueName: ${self:custom.productPrefix}_pendingTweetQueue.fifo
    onErrorTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.productPrefix}_onError
